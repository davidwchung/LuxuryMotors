{"version":3,"sources":["styles.js","Components/Header.js","redux/constants/carConstants.js","redux/actions/carActions.js","Components/Footer.js","pages/HomePage.js","redux/constants/cartConstants.js","pages/CarPage.js","redux/actions/cartActions.js","pages/CartPage.js","App.js","reportWebVitals.js","redux/store.js","redux/reducers/carReducers.js","redux/reducers/cartReducers.js","index.js"],"names":["useStyles","makeStyles","theme","title","flexGrow","welcome","backgroundColor","palette","background","paper","padding","spacing","welcomeButtons","marginTop","gridContainer","carPageContainer","card","width","height","carImage","carButtons","checkoutItems","marginLeft","marginRight","checkoutCard","marginBottom","checkoutItemGrid","checkoutImage","checkoutImg","display","maxWidth","maxHeight","checkoutName","paddingLeft","checkoutPrice","checkoutQuantity","checkoutRemove","checkoutTotal","minWidth","footer","Header","classes","cartItems","useSelector","state","cart","totalItems","forEach","item","quantity","AppBar","position","Toolbar","Typography","variant","className","Button","href","color","startIcon","GET_CARS_REQUEST","GET_CARS_SUCCESS","GET_CARS_FAIL","GET_CAR_REQUEST","GET_CAR_SUCCESS","GET_CAR_FAIL","url","Footer","align","Link","target","HomePage","dispatch","useDispatch","getCars","cars","loading","error","useEffect","a","type","actionTypes","axios","get","data","payload","response","message","randomId","randomIndex","Math","floor","random","length","_id","Container","gutterBottom","paragraph","Grid","container","justify","map","car","xs","sm","md","Card","CardActionArea","CardMedia","image","imageUrl","name","CardContent","component","manufacturer","price","toLocaleString","description","substring","CardActions","fullWidth","size","ADD_TO_CART","REMOVE_FROM_CART","CLEAR_CART","CarPage","match","history","getCar","id","params","currQuantity","find","x","alignItems","stock","onClick","getState","localStorage","setItem","JSON","stringify","push","disabled","horsepower","dots","document","getElementById","moreText","btnText","style","innerHTML","CartPage","removeFromCartHandler","removeFromCart","subTotal","expectedTax","grandTotal","ButtonBase","alt","src","direction","zeroMinWidth","IconButton","aria-label","margin","fontSize","undefined","minimumFractionDigits","maximumFractionDigits","App","CssBaseline","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","allReducers","combineReducers","action","carExists","filter","middleware","thunk","INITIAL_STATE","getItem","parse","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1b3867ce.chunk.js","sourcesContent":["import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  welcome: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: theme.spacing(4),\r\n  },\r\n  welcomeButtons: {\r\n    marginTop: \"30px\",\r\n  },\r\n  gridContainer: {\r\n    padding: \"30px 20px\",\r\n  },\r\n  carPageContainer: {\r\n    padding: \"130px 20px\",\r\n  },\r\n  card: {\r\n    width: \"auto\",\r\n    height: \"100%\",\r\n  },\r\n  carImage: {\r\n    height: \"250px\",\r\n    width: \"100%\",\r\n  },\r\n  carButtons: {\r\n    marginTop: \"20px\",\r\n  },\r\n  checkoutItems: {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  checkoutCard: {\r\n    marginBottom: \"5px\",\r\n  },\r\n  checkoutItemGrid: {\r\n    padding: \"10px\",\r\n  },\r\n  checkoutImage: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n  },\r\n  checkoutImg: {\r\n    display: \"block\",\r\n    maxWidth: \"100%\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  checkoutName: {\r\n    paddingLeft: \"10px\",\r\n    maxWidth: \"225px\",\r\n  },\r\n  checkoutPrice: {\r\n    maxWidth: \"150px\",\r\n  },\r\n  checkoutQuantity: {\r\n    maxWidth: \"100px\",\r\n  },\r\n  checkoutRemove: {\r\n    maxWidth: \"50px\",\r\n  },\r\n  checkoutTotal: {\r\n    minWidth: \"400px\",\r\n    maxWidth: \"400px\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  },\r\n  footer: {\r\n    backgroundColor: theme.palette.background.paper,\r\n    padding: \"20px 0px\",\r\n  },\r\n}));\r\n\r\nexport default useStyles;\r\n","import { AppBar, Toolbar, Typography, Button } from \"@material-ui/core\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport useStyles from \"../styles\";\r\nimport ShoppingCartOutlinedIcon from \"@material-ui/icons/ShoppingCartOutlined\";\r\n\r\nconst Header = () => {\r\n  const classes = useStyles();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  let totalItems = 0;\r\n  cartItems.forEach((item) => {\r\n    totalItems += item.quantity;\r\n  });\r\n\r\n  return (\r\n    <AppBar position=\"relative\">\r\n      <Toolbar>\r\n        <Typography variant=\"h6\" className={classes.title}>\r\n          Luxury Motors\r\n        </Typography>\r\n        <Button\r\n          href=\"/cart\"\r\n          color=\"inherit\"\r\n          startIcon={<ShoppingCartOutlinedIcon />}\r\n        >\r\n          CART ({totalItems})\r\n        </Button>\r\n        <Button href=\"/\" color=\"inherit\">\r\n          SHOP\r\n        </Button>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const GET_CARS_REQUEST = \"GET_CARS_REQUEST\";\r\nexport const GET_CARS_SUCCESS = \"GET_CARS_SUCCESS\";\r\nexport const GET_CARS_FAIL = \"GET_CARS_FAIL\";\r\n\r\nexport const GET_CAR_REQUEST = \"GET_CAR_REQUEST\";\r\nexport const GET_CAR_SUCCESS = \"GET_CAR_SUCCESS\";\r\nexport const GET_CAR_FAIL = \"GET_CAR_FAIL\";\r\n","import * as actionTypes from \"../constants/carConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://luxurymotors.herokuapp.com/api/cars/\";\r\n\r\nexport const getAllCars = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_CARS_REQUEST });\r\n    const { data } = await axios.get(url);\r\n    dispatch({\r\n      type: actionTypes.GET_CARS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_CARS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCarById = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_CAR_REQUEST });\r\n    const { data } = await axios.get(`${url}${id}`);\r\n    dispatch({\r\n      type: actionTypes.GET_CAR_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_CAR_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import { Typography, Link } from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\n\r\nconst Footer = () => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.footer}>\r\n      <Typography variant=\"subtitle1\" align=\"center\">\r\n        Feel free to check out my portfolio site!\r\n      </Typography>\r\n      <Typography align=\"center\">\r\n        <Link href=\"http://www.davidwchung.com\" target=\"_blank\">\r\n          www.davidwchung.com\r\n        </Link>\r\n      </Typography>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Card,\r\n  CardActionArea,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getAllCars } from \"../redux/actions/carActions\";\r\nimport Footer from \"../Components/Footer\";\r\n\r\nconst HomePage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const getCars = useSelector((state) => state.getCars);\r\n  const { cars, loading, error } = getCars;\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCars());\r\n  }, [dispatch]);\r\n\r\n  let randomId = \"\";\r\n\r\n  const randomIndex = Math.floor(Math.random() * cars.length);\r\n  if (cars[randomIndex]) {\r\n    randomId = cars[randomIndex]._id;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h5>Loading...</h5>\r\n      ) : error ? (\r\n        <h5>{error}</h5>\r\n      ) : (\r\n        <>\r\n          <div className={classes.welcome}>\r\n            <Container maxWidth=\"sm\">\r\n              <Typography\r\n                variant=\"h2\"\r\n                align=\"center\"\r\n                color=\"textPrimary\"\r\n                gutterBottom\r\n              >\r\n                Welcome!\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h5\"\r\n                align=\"center\"\r\n                color=\"textSecondary\"\r\n                paragraph\r\n              >\r\n                Find the car of your dreams today.\r\n              </Typography>\r\n              <div className={classes.welcomeButtons}>\r\n                <Grid container spacing={2} justify=\"center\">\r\n                  <Grid item>\r\n                    <Button\r\n                      href={`car/${randomId}`}\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                    >\r\n                      View Random Car\r\n                    </Button>\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button href=\"/cart\" variant=\"outlined\" color=\"primary\">\r\n                      View Cart\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </div>\r\n            </Container>\r\n          </div>\r\n          <Container className={classes.gridContainer} maxWidth=\"lg\">\r\n            <Grid container spacing={6}>\r\n              {cars.map((car) => (\r\n                <Grid item key={car._id} xs={12} sm={6} md={4}>\r\n                  <Card className={classes.card}>\r\n                    <CardActionArea>\r\n                      <CardMedia\r\n                        className={classes.carImage}\r\n                        image={car.imageUrl}\r\n                        title={car.name}\r\n                      />\r\n                      <CardContent>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                          {`${car.manufacturer} ${car.name}`}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h6\" component=\"h2\">\r\n                          {car.price\r\n                            ? `$${car.price.toLocaleString()}`\r\n                            : `$${car.price}`}\r\n                        </Typography>\r\n                        <Typography variant=\"subtitle2\">\r\n                          {car.description\r\n                            ? `${car.description.substring(0, 100)}....`\r\n                            : \"\"}\r\n                        </Typography>\r\n                      </CardContent>\r\n                    </CardActionArea>\r\n                    <CardActions>\r\n                      <Button\r\n                        fullWidth\r\n                        href={`car/${car._id}`}\r\n                        size=\"small\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Learn More\r\n                      </Button>\r\n                    </CardActions>\r\n                  </Card>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomePage;\r\n","export const ADD_TO_CART = \"ADD_TO_CART\";\r\nexport const REMOVE_FROM_CART = \"REMOVE_FROM_CART\";\r\nexport const CLEAR_CART = \"CLEAR_CART\";\r\n","import {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\nimport \"../App.css\";\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport { getCarById } from \"../redux/actions/carActions\";\r\nimport { addToCart } from \"../redux/actions/cartActions\";\r\n\r\nconst CarPage = ({ match, history }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const getCar = useSelector((state) => state.getCar);\r\n  const { car, loading, error } = getCar;\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (car && match.params.id !== car._id) {\r\n      dispatch(getCarById(match.params.id));\r\n    }\r\n  }, [dispatch, car, match]);\r\n\r\n  function addToCartHandler() {\r\n    dispatch(addToCart(car._id, currQuantity));\r\n    history.push(\"/cart\");\r\n  }\r\n\r\n  function showMore() {\r\n    var dots = document.getElementById(\"dots\");\r\n    var moreText = document.getElementById(\"more\");\r\n    var btnText = document.getElementById(\"showMoreButton\");\r\n\r\n    if (dots.style.display === \"none\") {\r\n      dots.style.display = \"inline\";\r\n      btnText.innerHTML = \"Show More\";\r\n      moreText.style.display = \"none\";\r\n    } else {\r\n      dots.style.display = \"none\";\r\n      btnText.innerHTML = \"Show Less\";\r\n      moreText.style.display = \"inline\";\r\n    }\r\n  }\r\n\r\n  let currQuantity = 0;\r\n\r\n  if (cartItems) {\r\n    if (cartItems.find((x) => x.id === match.params.id)) {\r\n      currQuantity = cartItems.find((x) => x.id === match.params.id).quantity;\r\n    } else {\r\n      currQuantity = 1;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <h5>Loading...</h5>\r\n      ) : error ? (\r\n        <h5>{error}</h5>\r\n      ) : (\r\n        <>\r\n          <Container className={classes.carPageContainer} maxWidth=\"lg\">\r\n            <Grid container spacing={6} alignItems=\"center\">\r\n              <Grid item key={car.imageUrl} xs={12} sm={12} md={6}>\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  image={car.imageUrl}\r\n                  title={car.name}\r\n                />\r\n                <Grid\r\n                  container\r\n                  spacing={2}\r\n                  justify=\"center\"\r\n                  className={classes.carButtons}\r\n                >\r\n                  <Grid item>\r\n                    {currQuantity < car.stock ? (\r\n                      <Button\r\n                        onClick={addToCartHandler}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Add To cart\r\n                      </Button>\r\n                    ) : (\r\n                      <Button variant=\"contained\" color=\"primary\" disabled>\r\n                        Out Of Stock\r\n                      </Button>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item>\r\n                    <Button href=\"/\" variant=\"outlined\" color=\"primary\">\r\n                      Back To All Cars\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item key={car._id} xs={12} sm={12} md={6}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Typography gutterBottom variant=\"h3\" component=\"h2\">\r\n                      {`${car.manufacturer} ${car.name}`}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" component=\"h2\">\r\n                      Price:{\" \"}\r\n                      {car.price\r\n                        ? `$${car.price.toLocaleString()}`\r\n                        : `$${car.price}`}\r\n                    </Typography>\r\n                    <Typography variant=\"h6\" component=\"h2\">\r\n                      Horsepower: {car.horsepower}\r\n                    </Typography>\r\n                    <Typography variant=\"subtitle1\" component=\"h2\">\r\n                      Stock: {car.stock}\r\n                    </Typography>\r\n                    <p>\r\n                      {car.description\r\n                        ? car.description.substring(0, 200)\r\n                        : car.description}\r\n                      <span id=\"dots\">....</span>\r\n                      <span id=\"more\">\r\n                        {car.description\r\n                          ? car.description.substring(\r\n                              200,\r\n                              car.description.length\r\n                            )\r\n                          : car.description}\r\n                      </span>\r\n                    </p>\r\n                    <button\r\n                      className=\"showMoreButton\"\r\n                      onClick={showMore}\r\n                      id=\"showMoreButton\"\r\n                    >\r\n                      Show More\r\n                    </button>\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            </Grid>\r\n          </Container>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CarPage;\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\nimport axios from \"axios\";\r\n\r\nconst url = \"https://luxurymotors.herokuapp.com/api/cars/\";\r\n\r\nexport const addToCart = (id, quantity) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`${url}${id}`);\r\n\r\n  dispatch({\r\n    type: actionTypes.ADD_TO_CART,\r\n    payload: {\r\n      id: data._id,\r\n      name: data.name,\r\n      manufacturer: data.manufacturer,\r\n      price: data.price,\r\n      imageUrl: data.imageUrl,\r\n      quantity: quantity,\r\n    },\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const removeFromCart = (id) => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.REMOVE_FROM_CART,\r\n    payload: id,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\nexport const clearCart = () => async (dispatch, getState) => {\r\n  dispatch({\r\n    type: actionTypes.CLEAR_CART,\r\n  });\r\n\r\n  localStorage.setItem(\"cart\", JSON.stringify(getState().cart.cartItems));\r\n};\r\n","import {\r\n  Container,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  Card,\r\n  ButtonBase,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport useStyles from \"../styles\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { removeFromCart, clearCart } from \"../redux/actions/cartActions\";\r\n\r\nconst CartPage = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  function removeFromCartHandler(id) {\r\n    dispatch(removeFromCart(id));\r\n  }\r\n\r\n  function checkoutHandler() {\r\n    dispatch(clearCart());\r\n  }\r\n\r\n  let totalItems = 0;\r\n  cartItems.forEach((item) => {\r\n    totalItems += item.quantity;\r\n  });\r\n\r\n  let subTotal = 0;\r\n  cartItems.forEach((item) => {\r\n    subTotal += item.price * item.quantity;\r\n  });\r\n\r\n  const expectedTax = subTotal * 0.2;\r\n  const grandTotal = subTotal + expectedTax;\r\n\r\n  return (\r\n    <>\r\n      <Container className={classes.gridContainer} maxWidth=\"lg\">\r\n        <Typography variant=\"h3\" align=\"center\" gutterBottom>\r\n          Cart Items\r\n        </Typography>\r\n        {cartItems.length > 0 ? (\r\n          <Grid container spacing={6} alignItems=\"flex-start\">\r\n            <Grid item className={classes.checkoutItems} xs={12} sm={12} md={8}>\r\n              {cartItems.map((item) => (\r\n                <Card key={item.id} className={classes.checkoutCard}>\r\n                  <Grid container className={classes.checkoutItemGrid}>\r\n                    <Grid item>\r\n                      <ButtonBase\r\n                        href={`car/${item.id}`}\r\n                        className={classes.checkoutImage}\r\n                      >\r\n                        <img\r\n                          className={classes.checkoutImg}\r\n                          alt={item.name}\r\n                          src={item.imageUrl}\r\n                        />\r\n                      </ButtonBase>\r\n                    </Grid>\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      sm\r\n                      container\r\n                      direction=\"row\"\r\n                      justify=\"space-between\"\r\n                      alignItems=\"center\"\r\n                      zeroMinWidth\r\n                    >\r\n                      <Grid item xs className={classes.checkoutName}>\r\n                        <Typography>\r\n                          {item.manufacturer} {item.name}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs className={classes.checkoutPrice}>\r\n                        <Typography>\r\n                          Price: ${item.price.toLocaleString()}\r\n                        </Typography>\r\n                      </Grid>\r\n                      <Grid item xs className={classes.checkoutQuantity}>\r\n                        <Typography>Quantity: {item.quantity}</Typography>\r\n                      </Grid>\r\n                      <Grid item xs className={classes.checkoutRemove}>\r\n                        <IconButton\r\n                          onClick={() => removeFromCartHandler(item.id)}\r\n                          aria-label=\"delete\"\r\n                          className={classes.margin}\r\n                          color=\"secondary\"\r\n                        >\r\n                          <DeleteIcon fontSize=\"default\" />\r\n                        </IconButton>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Card>\r\n              ))}\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              className={classes.checkoutTotal}\r\n              container\r\n              xs={12}\r\n              sm={12}\r\n              md={4}\r\n              justify=\"space-between\"\r\n            >\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"left\">\r\n                Items ({totalItems}):\r\n              </Typography>\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"right\">\r\n                $\r\n                {subTotal.toLocaleString(undefined, {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                })}\r\n              </Typography>\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"left\">\r\n                Estimated Tax (20%):\r\n              </Typography>\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"right\">\r\n                $\r\n                {expectedTax.toLocaleString(undefined, {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                })}\r\n              </Typography>\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"left\">\r\n                Grand Total:\r\n              </Typography>\r\n              <Typography variant=\"h6\" display=\"inline\" align=\"right\">\r\n                $\r\n                {grandTotal.toLocaleString(undefined, {\r\n                  minimumFractionDigits: 2,\r\n                  maximumFractionDigits: 2,\r\n                })}\r\n              </Typography>\r\n              <Button\r\n                onClick={checkoutHandler}\r\n                href=\"/\"\r\n                fullWidth\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                align=\"center\"\r\n              >\r\n                Place Order\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        ) : (\r\n          <>\r\n            <Typography variant=\"h6\" align=\"center\">\r\n              Your Cart is Empty\r\n            </Typography>\r\n            <Grid container spacing={2} justify=\"center\">\r\n              <Grid item>\r\n                <Button href=\"/\" variant=\"contained\" color=\"primary\">\r\n                  View Cars\r\n                </Button>\r\n              </Grid>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartPage;\r\n","import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\n\nimport Header from \"./Components/Header\";\n\n// Pages\nimport HomePage from \"./pages/HomePage\";\nimport CarPage from \"./pages/CarPage\";\nimport CartPage from \"./pages/CartPage\";\n\nfunction App() {\n  return (\n    <>\n      <CssBaseline />\n      <Router>\n        <Header />\n        <main>\n          <Switch>\n            <Route exact path=\"/\" component={HomePage} />\n            <Route exact path=\"/car/:id\" component={CarPage} />\n            <Route exact path=\"/cart\" component={CartPage} />\n          </Switch>\n        </main>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\n\r\nimport { getCarByIdReducer, getAllCarsReducer } from \"./reducers/carReducers\";\r\nimport { cartReducer } from \"./reducers/cartReducers\";\r\n\r\nconst allReducers = combineReducers({\r\n  getCars: getAllCarsReducer,\r\n  getCar: getCarByIdReducer,\r\n  cart: cartReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\n\r\nconst cartFromLocalStorage = localStorage.getItem(\"cart\")\r\n  ? JSON.parse(localStorage.getItem(\"cart\"))\r\n  : [];\r\n\r\nconst INITIAL_STATE = {\r\n  cart: {\r\n    cartItems: cartFromLocalStorage,\r\n  },\r\n};\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  INITIAL_STATE,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as actionTypes from \"../constants/carConstants\";\r\n\r\nexport const getAllCarsReducer = (state = { cars: [] }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CARS_REQUEST:\r\n      return {\r\n        loading: true,\r\n        cars: [],\r\n      };\r\n    case actionTypes.GET_CARS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        cars: action.payload,\r\n      };\r\n    case actionTypes.GET_CARS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\nexport const getCarByIdReducer = (state = { car: {} }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.GET_CAR_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case actionTypes.GET_CAR_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        car: action.payload,\r\n      };\r\n    case actionTypes.GET_CAR_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import * as actionTypes from \"../constants/cartConstants\";\r\n\r\nexport const cartReducer = (state = { cartItems: [] }, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.ADD_TO_CART:\r\n      const car = action.payload;\r\n\r\n      const carExists = state.cartItems.find((x) => x.id === car.id);\r\n\r\n      if (carExists) {\r\n        car.quantity++;\r\n        return {\r\n          cartItems: state.cartItems.map((x) =>\r\n            x.id === carExists.id ? car : x\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          cartItems: [...state.cartItems, car],\r\n        };\r\n      }\r\n    case actionTypes.REMOVE_FROM_CART:\r\n      return {\r\n        cartItems: state.cartItems.filter((x) => x.id !== action.payload),\r\n      };\r\n    case actionTypes.CLEAR_CART:\r\n      return {\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}